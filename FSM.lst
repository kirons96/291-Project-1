                  2   $LIST
0000              4   
0000              5   CLK           EQU 22118400 ; Microcontroller system crystal frequency in Hz
0000              6   TIMER0_RATE   EQU 4096     ; 2048Hz squarewave (peak amplitude of CEM-1203 speaker)
0000              7   TIMER0_RELOAD EQU ((65536-(CLK/TIMER0_RATE)))
0000              8   TIMER2_RATE   EQU 500     ; 1000Hz, for a timer tick of 1ms
0000              9   TIMER2_RELOAD EQU ((65536-(CLK/TIMER2_RATE)))
0000             10   
0000             11   BOOT_BUTTON     EQU P4.5 ;reset button
0000             12   SOUND_OUT       EQU P3.7
0000             13   PWM_PIN                  EQU P0.0 ;change later
0000             14   START_BUTTON     EQU P0.3 ;start button
0000             15   
0000             16   ; Reset vector
0000             17   org 0000H
0000 020175      18       ljmp main
0003             19   
0003             20   ; External interrupt 0 vector (not used in this code)
0003             21   org 0003H
0003 32          22            reti
0004             23   
0004             24   ; Timer/Counter 0 overflow interrupt vector
000B             25   org 000BH
000B 0200F1      26            ljmp Timer0_ISR
000E             27   
000E             28   ; External interrupt 1 vector (not used in this code)
0013             29   org 0013H
0013 32          30            reti
0014             31   
0014             32   ; Timer/Counter 1 overflow interrupt vector (not used in this code)
001B             33   org 001BH
001B 32          34            reti
001C             35   
001C             36   ; Serial port receive/transmit interrupt vector (not used in this code)
0023             37   org 0023H 
0023 32          38            reti
0024             39            
0024             40   ; Timer/Counter 2 overflow interrupt vector
002B             41   org 002BH
002B 020146      42            ljmp Timer2_ISR
002E             43   
0030             44   dseg at 30h
0030             45   Count1ms:        ds 2 ; Used to determine when half second has passed
0032             46   CURRENT_STATE:   ds 1 ;current state 
0033             47   
0033             48   ;FSM VARIABLES
0033             49   SEC:                     ds 1 ;timer
0034             50   TEMP:                    ds 1 ;temperature
0035             51   
0035             52   ;PWM VARIABLES
0035             53   PWM_FLAG:                ds 1 ;
0036             54   PWM_COUNTER:     ds 1 ;timing
0037             55   PWM_OFF:                 ds 1 ;constants
0038             56   PWM_LOW:                 ds 1
0039             57   PWM_HIGH:                ds 1
003A             58   
003A             59   ;BEEPER FEEDBACK VARIABLES
003A             60   SHORT_BEEP:              ds 1
003B             61   LONG_BEEP:               ds 1
003C             62   
0000             63   bseg
0000             64   half_seconds_flag: dbit 1 ; Set to one in the ISR every time 500 ms had passed
0001             65   
002E             66   cseg
002E             67   ; These 'equ' must match the wiring between the microcontroller and the LCD!
002E             68   LCD_RS equ P1.4
002E             69   LCD_RW equ P1.5
002E             70   LCD_E  equ P1.6
002E             71   LCD_D4 equ P3.2
002E             72   LCD_D5 equ P3.3
002E             73   LCD_D6 equ P3.4
002E             74   LCD_D7 equ P3.5
002E             75   
                 77   	$LIST
00DC             79   
00DC             80   ;---------------------------------;
00DC             81   ; Routine to initialize the ISR   ;
00DC             82   ; for timer 0                     ;
00DC             83   ;---------------------------------;
00DC             84   Timer0_Init:
00DC E589        85            mov a, TMOD
00DE 54F0        86            anl a, #0xf0 ; Clear the bits for timer 0
00E0 4401        87            orl a, #0x01 ; Configure timer 0 as 16-timer
00E2 F589        88            mov TMOD, a
00E4 758CEA      89            mov TH0, #high(TIMER0_RELOAD)
00E7 758AE8      90            mov TL0, #low(TIMER0_RELOAD)
00EA             91            ; Enable the timer and interrupts
00EA D2A9        92       setb ET0  ; Enable timer 0 interrupt
00EC D28C        93       setb TR0  ; Start timer 0
00EE D2AF        94       setb EA   ; Enable Global interrupts
00F0 22          95            ret
00F1             96   
00F1             97   ;---------------------------------;
00F1             98   ; ISR for timer 0.  Set to execute;
00F1             99   ; every 1/4096Hz to generate a    ;
00F1            100   ; 2048 Hz square wave at pin P3.7 ;
00F1            101   ;---------------------------------;
00F1            102   Timer0_ISR:
00F1            103            ; Define a latency correction for the timer reload
00F1            104            CORRECTION EQU (4+4+2+2+4+4) ; lcall+ljmp+clr+mov+mov+setb
00F1            105            ; In mode 1 we need to reload the timer.
00F1 C28C       106            clr TR0
00F3 758CEA     107            mov TH0, #high(TIMER0_RELOAD+CORRECTION)
00F6 758AFC     108            mov TL0, #low(TIMER0_RELOAD+CORRECTION)
00F9 D28C       109            setb TR0
00FB            110            
00FB C0E0       111            push acc
00FD C0D0       112            push psw
00FF            113            
00FF            114            ;**************PWM**************
00FF            115            
00FF            116            
00FF            117            ;CHANGE THE CODE: CLR THE PIN BELOW, SET IT ON ABOVE AT 0
00FF            118   
00FF            119   CHECK_OFF:
00FF E535       120            mov a, PWM_FLAG
0101 B53705     121            cjne a, PWM_OFF, CHECK_LOW
0104            122            ;PWM IS OFF
0104 C280       123            clr PWM_PIN
0106 02011B     124            ljmp FINISH_PWM_FLAG_CHECK
0109            125   CHECK_LOW:
0109 B5380A     126            cjne a, PWM_LOW, CHECK_HIGH
010C            127            ;PWM IS LOW
010C E536       128            mov a, PWM_COUNTER
010E B5380A     129            cjne a, PWM_LOW, FINISH_PWM_FLAG_CHECK
0111            130            ;PWM_COUNTER = PWM_LOW
0111 C280       131            clr PWM_PIN
0113 02011B     132            ljmp FINISH_PWM_FLAG_CHECK
0116            133   CHECK_HIGH:
0116            134            ;PWM IS HIGH
0116 E536       135            mov a, PWM_COUNTER
0118 B53900     136            cjne a, PWM_HIGH, FINISH_PWM_FLAG_CHECK
011B            137            ;PWM_COUNTER = PWM_HIGH
011B            138            ;clr PWM_PIN    
011B            139   
011B            140   FINISH_PWM_FLAG_CHECK: 
011B            141   
011B E536       142            mov a, PWM_COUNTER
011D 2401       143            add a, #0x01
011F D4         144            da a
0120 F536       145            mov PWM_COUNTER, a
0122            146   
0122 B46405     147            cjne a, #100, FINISH_PWM
0125            148            ;PIN_COUNTER has reached 100
0125 D280       149            setb PWM_PIN    
0127            150   
0127 753600     151            mov PWM_COUNTER, #0 ;reset the counter          
012A            152   
012A            153   FINISH_PWM:
012A            154            
012A D0D0       155            pop psw
012C D0E0       156            pop acc
012E            157            
012E B2B7       158            cpl SOUND_OUT ; Connect speaker to P3.7!
0130 32         159            reti
0131            160   
0131            161   Timer2_Init:
0131 75C800     162            mov T2CON, #0 ; Stop timer.  Autoreload mode.
0134            163            ; One millisecond interrupt
0134 75CB53     164            mov RCAP2H, #high(TIMER2_RELOAD)
0137 75CA34     165            mov RCAP2L, #low(TIMER2_RELOAD)
013A            166            ; Set the 16-bit variable Count1ms to zero
013A E4         167            clr a
013B F530       168            mov Count1ms+0, a
013D F531       169            mov Count1ms+1, a
013F            170            ; Enable the timer and interrupts
013F D2AD       171       setb ET2  ; Enable timer 2 interrupt
0141 D2CA       172       setb TR2  ; Enable timer 2
0143 D2AF       173       setb EA   ; Enable Global interrupts
0145 22         174            ret
0146            175   
0146            176   ;---------------------------------;
0146            177   ; ISR for timer 2                 ;
0146            178   ;---------------------------------;
0146            179   Timer2_ISR:
0146 C2CF       180            clr TF2  ; Timer 2 doesn't clear TF2 automatically in ISR
0148 B2B6       181            cpl P3.6 ; To check the interrupt rate with oscilloscope. It must be a 1 ms pulse.
014A            182            
014A            183            ; The two registers used in the ISR must be saved in the stack
014A C0E0       184            push acc
014C C0D0       185            push psw
014E            186            
014E            187            ; Increment the 16-bit counter
014E 0530       188            inc Count1ms+0    ; Increment the low 8-bits first
0150 E530       189            mov a, Count1ms+0 ; If the low 8-bits overflow, then increment high 8-bits
0152 7002       190            jnz Inc_Done
0154 0531       191            inc Count1ms+1
0156            192   
0156            193   Inc_Done:
0156            194            ; Check if half second has passed
0156 E530       195            mov a, Count1ms+0
0158 B4F415     196            cjne a, #low(500), Timer2_ISR_done
015B E531       197            mov a, Count1ms+1
015D B40110     198            cjne a, #high(500), Timer2_ISR_done
0160            199            
0160            200            ; 500 milliseconds have passed.  Set a flag so the main program knows
0160 D200       201            setb half_seconds_flag ; Let the main program know half second had passed
0162 B28E       202            cpl TR1 ; This line makes a beep-silence-beep-silence sound
0164            203            ; Reset the milli-seconds counter, it is a 16-bit variable
0164 E4         204            clr a
0165 F530       205            mov Count1ms+0, a
0167 F531       206            mov Count1ms+1, a
0169            207            ; Increment the BCD counter
0169 E533       208            mov a, SEC
016B 2401       209            add a, #0x01
016D D4         210            da a
016E F533       211            mov SEC, a
0170            212            
0170            213   Timer2_ISR_done:
0170 D0D0       214            pop psw
0172 D0E0       215            pop acc
0174 32         216            reti
0175            217   
0175            218   ;---------------------------------;
0175            219   ; Main program. Includes hardware ;
0175            220   ; initialization and 'forever'    ;
0175            221   ; loop.                           ;
0175            222   ;---------------------------------;
0175            223   main:
0175            224            ; Initialization
0175 75817F     225            mov SP, #7FH
0178 75C100     226            mov PMOD, #0 ; Configure all ports in bidirectional mode
017B 1200DC     227       lcall Timer0_Init
017E 120131     228            lcall Timer2_Init
0181 120088     229            lcall LCD_4BIT
0184            230            ; For convenience a few handy macros are included in 'LCD_4bit.inc':
0184 D200       231            setb half_seconds_flag
0186 753300     232            mov SEC, #0x00
0189 753200     233            mov CURRENT_STATE, #0
018C 753600     234            mov PWM_COUNTER, #0
018F 853735     235            mov PWM_FLAG, PWM_OFF
0192 753700     236            mov PWM_OFF, #0
0195 753814     237            mov PWM_LOW, #20
0198 753964     238            mov PWM_HIGH, #100
019B 753A00     239            mov SHORT_BEEP, #0
019E 753B00     240            mov LONG_BEEP, #0
01A1            241   
01A1            242            ; After initialization the program stays in this 'forever' loop
01A1            243   
01A1            244   forever:
01A1 20C52C     245            jb BOOT_BUTTON, loop_a  ; if the 'BOOT' button is not pressed skip
01A4 C002       246            push AR2
01A6 7A32       246            mov R2, #50
01A8 120039     246            lcall ?Wait_Milli_Seconds
01AB D002       246            pop AR2         ; Debounce delay.  This macro is also in 'LCD_4bit.inc'
01AD 20C520     247            jb BOOT_BUTTON, loop_a  ; if the 'BOOT' button is not pressed skip
01B0 30C5FD     248            jnb BOOT_BUTTON, $              ; wait for button release
01B3            249            ; A clean press of the 'BOOT' button has been detected, reset the BCD counter.
01B3            250            ; But first stop the timer and reset the milli-seconds counter, to resync everything.
01B3 C28C       251            clr TR0
01B5 E4         252            clr a
01B6 F530       253            mov Count1ms+0, a
01B8 F531       254            mov Count1ms+1, a
01BA            255            ; Now clear the BCD counter
01BA 753300     256            mov SEC, #0x00
01BD 753200     257            mov CURRENT_STATE, #0
01C0 753600     258            mov PWM_COUNTER, #0
01C3 853735     259            mov PWM_FLAG, PWM_OFF
01C6 753A00     260            mov SHORT_BEEP, #0
01C9 753B00     261            mov LONG_BEEP, #0
01CC            262   
01CC D28C       263            setb TR0                ; Re-enable the timer
01CE 8003       264            sjmp loop_b             ; Display the new value
01D0            265   loop_a:
01D0 3000CE     266            jnb half_seconds_flag, forever
01D3            267   loop_b:
01D3 C200       268       clr half_seconds_flag ; We clear this flag in the main forever, but it is set in the ISR for timer 0
01D5            269   
01D5 E532       270            mov a, CURRENT_STATE
01D7            271   STATE0:
01D7 B4001B     272            cjne a, #0, STATE1
01DA 853735     273            mov PWM_FLAG, PWM_OFF
01DD 208312     274            jb START_BUTTON, STATE0_DONE
01E0 C002       275            push AR2
01E2 7A32       275            mov R2, #50
01E4 120039     275            lcall ?Wait_Milli_Seconds
01E7 D002       275            pop AR2; debounce time
01E9 208306     276            jb START_BUTTON, STATE0_DONE
01EC 3083FD     277            jnb START_BUTTON, $ ; Wait for key release
01EF 753201     278            mov CURRENT_STATE, #1
01F2            279   STATE0_DONE:
01F2 0201A1     280            ljmp forever
01F5            281   STATE1:
01F5 B40113     282            cjne a, #1, STATE2
01F8 853935     283            mov PWM_FLAG, PWM_HIGH
01FB 753300     284            mov SEC, #0
01FE 7496       285            mov a, #150
0200 C3         286            clr c
0201 9534       287            subb a, TEMP
0203 5003       288            jnc STATE1_DONE
0205 753202     289            mov CURRENT_STATE, #2
0208            290   STATE1_DONE:
0208 0201A1     291            ljmp forever
020B            292   STATE2:
020B B40210     293            cjne a, #2, STATE3
020E 853835     294            mov PWM_FLAG, PWM_LOW
0211 743C       295            mov a, #60
0213 C3         296            clr c
0214 9533       297            subb a, SEC
0216 5003       298            jnc STATE2_DONE
0218 753203     299            mov CURRENT_STATE, #3
021B            300   STATE2_DONE:
021B 0201A1     301            ljmp forever
021E            302   STATE3:
021E B40313     303            cjne a, #3, STATE4
0221 853935     304            mov PWM_FLAG, PWM_HIGH
0224 753300     305            mov SEC, #0
0227 74DC       306            mov a, #220
0229 C3         307            clr c
022A 9534       308            subb a, TEMP
022C 5003       309            jnc STATE3_DONE
022E 753204     310            mov CURRENT_STATE, #4
0231            311   STATE3_DONE:
0231 0201A1     312            ljmp forever
0234            313   STATE4:
0234 B40410     314            cjne a, #4, STATE5
0237 853835     315            mov PWM_FLAG, PWM_LOW
023A 742D       316            mov a, #45
023C C3         317            clr c
023D 9533       318            subb a, SEC
023F 5003       319            jnc STATE4_DONE
0241 753205     320            mov CURRENT_STATE, #5
0244            321   STATE4_DONE:
0244 0201A1     322            ljmp forever
0247            323   STATE5:
0247 B40510     324            cjne a, #5, STATE5_DONE
024A 853735     325            mov PWM_FLAG, PWM_OFF
024D 753300     326            mov SEC, #0
0250 743C       327            mov a, #60
0252 C3         328            clr c
0253 9534       329            subb a, TEMP
0255 5003       330            jnc STATE5_DONE
0257 753200     331            mov CURRENT_STATE, #0
025A            332   STATE5_DONE:
025A 0201A1     333            ljmp forever
